version: '3.8'

services:
  backend:
    build:
      context: ./webtrak
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_AUTH_URL=${GOOGLE_AUTH_URL}
      - GOOGLE_REDIRECT=${GOOGLE_REDIRECT}
      - FRONTEND_REDIRECT_URI=${FRONTEND_REDIRECT_URI}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - LINODE_REGION=${LINODE_REGION}
      - LINODE_ENDPOINT=${LINODE_ENDPOINT}
      - LINODE_SECRET_KEY=${LINODE_SECRET_KEY}
      - LINODE_BUCKET_NAME=${LINODE_BUCKET_NAME}
      - LINODE_ACCESS_KEY=${LINODE_ACCESS_KEY}
    depends_on:
      - db
    command: ["/wait-for-it.sh", "db:5432", "--", "java", "-jar", "app.jar"]
    # volumes:
    #   - ./webtrak/wait-for-it.sh:/wait-for-it.sh

  frontend:
    build:
      context: ./webtrak-ui
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_BACKEND_URL: ${NEXT_PUBLIC_BACKEND_URL}
        VITE_GOOGLE_CLIENT_ID: ${VITE_GOOGLE_CLIENT_ID}
        VITE_GOOGLE_CLIENT_SECRET: ${VITE_GOOGLE_CLIENT_SECRET}
        VITE_GOOGLE_REDIRECT_URI: ${VITE_GOOGLE_REDIRECT_URI}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
      - VITE_GOOGLE_CLIENT_ID=${VITE_GOOGLE_CLIENT_ID}
      - VITE_GOOGLE_CLIENT_SECRET=${VITE_GOOGLE_CLIENT_SECRET}
      - VITE_GOOGLE_REDIRECT_URI=${VITE_GOOGLE_REDIRECT_URI}

  db:
    image: postgres:15
    container_name: webtrak-db
    restart: always
    ports:
      - "5432:5432" 
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
